# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: Integration test
description: Run the integration tests against a single version of k8s and Vault
inputs:
  k8s-version:
    description: 'Kubernetes version to use for the kind cluster'
    required: true
  vault-version:
    description: 'Vault version to use for the tests'
    required: true
  tarball-file:
    description: 'Name of the tarball file artifact to download'
    required: true
  vault-license:
    description: 'Vault license to use for enterprise tests'
    required: true
  kind-cluster-name:
    description: 'Name of the kind cluster to create and test against'
    default: 'kind'
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
      with:
        node-version: ${{ env.NODE_VERSION }}
    - run: npm install -g bats@${{ env.BATS_VERSION }}
      shell: bash
    - run: bats -v
      shell: bash

    - name: Create Kind Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        cluster_name: ${{ inputs.kind-cluster-name }}
        config: test/bats/configs/kind/config.yaml
        node_image: kindest/node:v${{ inputs.k8s-version }}
        version: ${{ env.KIND_VERSION }}

    - name: Create kind export log root
      id: create_kind_export_log_root
      shell: bash
      run: |
        vault_flavor=ent
        log_artifact_name="kind-${{ inputs.kind-cluster-name }}-$(git rev-parse --short ${{ github.sha }})-${{ inputs.k8s-version }}-${{ inputs.vault-version }}-${vault_flavor}-helm-logs"
        log_root="/tmp/${log_artifact_name}"
        mkdir -p "${log_root}"
        echo "log_root=${log_root}" >> $GITHUB_OUTPUT
        echo "log_artifact_name=${log_artifact_name}" >> $GITHUB_OUTPUT

    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: vault-csi-provider-image

    - name: Load vault-csi-provider dev image
      shell: bash
      run: docker image load --input ${{ inputs.tarball-file }}

    - name: bats tests
      shell: bash
      env:
        VAULT_LICENSE: ${{ inputs.vault-license }}
      run: make e2e-teardown e2e-setup e2e-test DISPLAY_SETUP_TEARDOWN_LOGS=true VAULT_VERSION="${{ inputs.vault-version }}"

    - name: export kind cluster logs
      if: always()
      shell: bash
      run: |
        kind export logs --name ${{ inputs.kind-cluster-name }} ${{ steps.create_kind_export_log_root.outputs.log_root }}

    - name: Store kind cluster logs
      if: success()
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
      with:
        name: ${{ steps.create_kind_export_log_root.outputs.log_artifact_name }}
        path: ${{ steps.create_kind_export_log_root.outputs.log_root }}

    - name: Store kind cluster logs failure
      if: failure()
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
      with:
        name: ${{ steps.create_kind_export_log_root.outputs.log_artifact_name }}-failed
        path: ${{ steps.create_kind_export_log_root.outputs.log_root }}

name: Tests

on: [push, workflow_dispatch]

env:
  GOLANGCI_LINT_VERSION: "v1.47.3"
  HELM_VERSION: "v3.9.2"
  KIND_VERSION: "v0.14.0"
  BATS_VERSION: "1.5.0"
  NODE_VERSION: "14"

jobs:
  get-inputs:
    name: "Get Go version and lint flags"
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Determine Go version
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "::set-output name=go-version::$(cat .go-version)"
      - name: Get lint flags
        id: get-lint-flags
        run: |
          echo "Lint flags: $(make lint-flags)"
          echo "::set-output name=lint-flags::$(make lint-flags)"

  lint:
    needs:
      - get-inputs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # cache/restore go mod
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.get-inputs.outputs.go-version }}

      - name: go mod tidy
        run: |
          make mod
          if ! git diff --exit-code; then
            echo "Git directory has go.mod or go.sum changes"
            exit 1
          fi

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          args: ${{ needs.get-inputs.outputs.lint-flags }}
          # Caching is covered by the actions/cache step above.
          skip-cache: true


  test:
    needs:
      - get-inputs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # cache/restore go mod
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.get-inputs.outputs.go-version }}

      - name: Test
        run: make test

  integration-test:
    needs:
      - lint
      - test
    strategy:
      fail-fast: false
      matrix:
        kind-k8s-version: [1.19.16, 1.20.15, 1.21.12, 1.22.9, 1.23.6, 1.24.2]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install -g bats@${{ env.BATS_VERSION }}
        shell: bash
      - run: bats -v
        shell: bash

      - name: Create Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: kind
          node_image: kindest/node:v${{ matrix.kind-k8s-version }}
          version: ${{ env.KIND_VERSION }}

      - name: bats tests
        run: |
          make e2e-container
          make e2e-setup
          export DISPLAY_SETUP_TEARDOWN_LOGS=true
          make e2e-test
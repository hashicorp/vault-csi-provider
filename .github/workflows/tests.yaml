name: Tests

on: [push, workflow_dispatch]

env:
  TARBALL_FILE: vault-csi-provider.docker.tar

jobs:
  versions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "setting versions"
    outputs:
      K8S_VERSIONS: '["1.29.2", "1.28.7", "1.27.11", "1.26.14", "1.25.16"]'
      VAULT_N: "1.15.6"
      VAULT_N_1: "1.14.10"
      VAULT_N_2: "1.13.13"
  copyright:
    uses: hashicorp/vault-workflows-common/.github/workflows/copyright-headers.yaml@main
  go-checks:
    uses: hashicorp/vault-workflows-common/.github/workflows/go-checks.yaml@main
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: .go-version

      - name: Install tools
        run: make bootstrap

      - name: Lint
        run: make lint GOLANGCI_LINT_FORMAT=github-actions

  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      TARBALL_FILE: ${{ env.TARBALL_FILE }}
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: .go-version

      - name: Build
        run: |
          make e2e-image
          docker save --output "${TARBALL_FILE}" e2e/vault-csi-provider:latest

      - name: Test
        run: make test

      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: vault-csi-provider-image
          path: ${{ env.TARBALL_FILE }}

  latest-vault:
    name: latest-vault vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
    runs-on: ubuntu-latest
    needs:
      - versions
      - lint
      - build-and-test
    strategy:
        fail-fast: false
        matrix:
          vault-version:
            - ${{ needs.versions.outputs.VAULT_N }}
          k8s-version: ${{ fromJson(needs.versions.outputs.K8S_VERSIONS) }}

    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - uses: ./.github/actions/integration-test
        name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
        with:
          k8s-version: ${{ matrix.k8s-version }}
          vault-version: ${{ matrix.vault-version }}
          tarball-file: ${{ needs.build-and-test.outputs.TARBALL_FILE }}
          vault-license: ${{ secrets.VAULT_LICENSE_CI }}

  latest-k8s:
    name: latest-k8s vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
    needs:
      - versions
      - lint
      - build-and-test
    strategy:
        fail-fast: false
        matrix:
          k8s-version:
            - ${{ fromJson(needs.versions.outputs.K8S_VERSIONS)[0] }}
          vault-version:
            - needs.versions.outputs.VAULT_N_1
            - needs.versions.outputs.VAULT_N_2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - uses: ./.github/actions/integration-test
        name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
        with:
          k8s-version: ${{ matrix.k8s-version }}
          vault-version: ${{ matrix.vault-version }}
          tarball-file: ${{ needs.build-and-test.outputs.TARBALL_FILE }}
          vault-license: ${{ secrets.VAULT_LICENSE_CI }}

name: Tests

on: [push, workflow_dispatch]

env:
  KIND_VERSION: "v0.27.0"
  BATS_VERSION: "1.11.1"
  NODE_VERSION: "19.8.1"
  TARBALL_FILE: vault-csi-provider.docker.tar

jobs:
  versions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "setting versions"
    outputs:
      # JSON encoded array of k8s versions.
      K8S_VERSIONS: '["1.32.2", "1.31.6", "1.30.10", "1.29.14", "1.28.15"]'
      VAULT_N: "1.19.0"
      VAULT_N_1: "1.18.5"
      VAULT_N_2: "1.17.12"
      VAULT_LTS_1: "1.16.16"
  copyright:
    uses: hashicorp/vault-workflows-common/.github/workflows/copyright-headers.yaml@main
  go-checks:
    uses: hashicorp/vault-workflows-common/.github/workflows/go-checks.yaml@main
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: .go-version

      - name: Install tools
        run: make bootstrap

      - name: Lint
        run: make lint GOLANGCI_LINT_FORMAT=colored-line-number

  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      TARBALL_FILE: ${{ env.TARBALL_FILE }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: .go-version

      - name: Build
        run: |
          make e2e-image
          docker save --output "${TARBALL_FILE}" e2e/vault-csi-provider:latest

      - name: Test
        run: make test

      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: vault-csi-provider-image
          path: ${{ env.TARBALL_FILE }}

  latest-vault:
    name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
    runs-on: ubuntu-latest
    needs:
      - versions
      - lint
      - build-and-test
    strategy:
        fail-fast: false
        matrix:
          vault-version:
            - ${{ needs.versions.outputs.VAULT_N }}
          k8s-version: ${{ fromJson(needs.versions.outputs.K8S_VERSIONS) }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/integration-test
        name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
        with:
          k8s-version: ${{ matrix.k8s-version }}
          vault-version: ${{ matrix.vault-version }}
          tarball-file: ${{ needs.build-and-test.outputs.TARBALL_FILE }}
          vault-license: ${{ secrets.VAULT_LICENSE_CI }}

  latest-k8s:
    name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
    needs:
      - versions
      - lint
      - build-and-test
    strategy:
        fail-fast: false
        matrix:
          k8s-version:
            - ${{ fromJson(needs.versions.outputs.K8S_VERSIONS)[0] }}
          vault-version:
            - ${{ needs.versions.outputs.VAULT_N_1 }}
            - ${{ needs.versions.outputs.VAULT_N_2 }}
            - ${{ needs.versions.outputs.VAULT_LTS_1 }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/integration-test
        name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
        with:
          k8s-version: ${{ matrix.k8s-version }}
          vault-version: ${{ matrix.vault-version }}
          tarball-file: ${{ needs.build-and-test.outputs.TARBALL_FILE }}
          vault-license: ${{ secrets.VAULT_LICENSE_CI }}

name: Tests

on: [push, workflow_dispatch]

env:
  KIND_VERSION: "v0.16.0"
  BATS_VERSION: "1.8.2"
  NODE_VERSION: "16"
  TARBALL_FILE: vault-csi-provider.docker.tar

jobs:
  get-go-version:
    name: "Determine Go toolchain version"
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Determine Go version
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> $GITHUB_OUTPUT

  lint:
    needs:
      - get-go-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # cache/restore go mod
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}

      - name: Install tools
        run: make bootstrap

      - name: go mod tidy
        run: |
          make mod
          if ! git diff --exit-code; then
            echo "Git directory has go.mod or go.sum changes. Run 'make mod' to fix"
            exit 1
          fi

      - name: fmt
        run: |
          make fmt
          if ! git diff --exit-code; then
            echo "Git directory has formatting changes. Run 'make fmt' to fix"
            exit 1
          fi

      - name: Lint
        run: make lint GOLANGCI_LINT_FORMAT=github-actions


  test:
    needs:
      - get-go-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # cache/restore go mod
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}

      - name: Build
        run: |
          make e2e-image
          docker save --output "${TARBALL_FILE}" e2e/vault-csi-provider:latest

      - name: Test
        run: make test

      - uses: actions/upload-artifact@v3
        with:
          name: vault-csi-provider-image
          path: ${{ env.TARBALL_FILE }}

  integration-test:
    needs:
      - lint
      - test
    strategy:
      fail-fast: false
      matrix:
        kind-k8s-version: [1.21.14, 1.22.15, 1.23.13, 1.24.7, 1.25.3]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install -g bats@${{ env.BATS_VERSION }}
        shell: bash
      - run: bats -v
        shell: bash

      - name: Create Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          cluster_name: kind
          config: test/bats/configs/kind/config.yaml
          node_image: kindest/node:v${{ matrix.kind-k8s-version }}
          version: ${{ env.KIND_VERSION }}

      - uses: actions/download-artifact@v3
        with:
          name: vault-csi-provider-image

      - name: Load vault-csi-provider dev image
        run: docker image load --input ${{ env.TARBALL_FILE }}

      - name: bats tests
        run: DISPLAY_SETUP_TEARDOWN_LOGS=true make e2e-teardown e2e-setup e2e-test
